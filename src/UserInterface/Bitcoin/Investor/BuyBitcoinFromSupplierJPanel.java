/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Bitcoin.Investor;

import Bank.Customer;
import Business.Business;
import WorkRequest.InvestorWorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author owner
 */
public class BuyBitcoinFromSupplierJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BuyBitcoinFromSupplierJPanel
     */
//    public BuyBitcoinFromSupplierJPanel() {
//        initComponents();
//    }
    private JPanel userProcessContainer;
    private Business business;
    private Customer customer;
    
    BuyBitcoinFromSupplierJPanel(JPanel userProcessContainer, Business business, Customer customer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.customer = customer;
        populateWalletTable();
        populateTextField();
        
    }
    
    private void populateTextField() {
        bitcoinNumberJTextField.setText(String.valueOf(customer.getWallet().getBitcoinCatalog().size()));
        balanceJTextField.setText(String.valueOf(customer.getBitcoinSystemBalance()));
        supplierBitcoinJTextField.setText(String.valueOf(business.getSupplierAdmin().getBitcoinList().size()));
    }
    
    private void populateWalletTable() {
        DefaultTableModel model = (DefaultTableModel)jTableCustomerRequestToSupplier.getModel();
        model.setRowCount(0);
        for(InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
            if(request.getSender().getName().equals(customer.getName())){
                Object[] row = new Object[5];
                row[0] = request.getQuantity();
                row[1] = 1200;
                row[2] = request.getQuantity()*1200;
                row[3] = request.getStatus();
                row[4] = request.getRequestDate();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        supplierBitcoinJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        perchaseBitcoinNumberJTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonCreateARequest = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        balanceJTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCustomerRequestToSupplier = new javax.swing.JTable();
        bitcoinNumberJTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 153));

        jLabel6.setText("-Supplier Remaining Bitcoin number:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Investor Request Management");

        jLabel7.setText("-Quantity You want to perchase:");

        jButtonCreateARequest.setText("Send to Supplier");
        jButtonCreateARequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateARequestActionPerformed(evt);
            }
        });

        jLabel8.setText("-Remaining Balance:");

        jTableCustomerRequestToSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Require Quatity", "Selling Price", "Total Price", "Status", "Request Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCustomerRequestToSupplier);
        if (jTableCustomerRequestToSupplier.getColumnModel().getColumnCount() > 0) {
            jTableCustomerRequestToSupplier.getColumnModel().getColumn(0).setResizable(false);
            jTableCustomerRequestToSupplier.getColumnModel().getColumn(1).setResizable(false);
            jTableCustomerRequestToSupplier.getColumnModel().getColumn(2).setResizable(false);
            jTableCustomerRequestToSupplier.getColumnModel().getColumn(3).setResizable(false);
            jTableCustomerRequestToSupplier.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel9.setText("-Remaining Bitcoin number:");

        jLabel4.setText("-Investor Bitcoin purchasing request--------------------------------------------------------------------------------------------------------------------------");

        jLabel5.setText("-Investor Bitcoin purchasing request--------------------------------------------------------------------------------------------------------------------------");

        jLabel10.setText("-Investor Bitcoin purchasing request--------------------------------------------------------------------------------------------------------------------------");

        jButton2.setText("Confirm Transfer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("<< Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bitcoinNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(balanceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(perchaseBitcoinNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCreateARequest))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(supplierBitcoinJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(bitcoinNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(balanceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(supplierBitcoinJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(perchaseBitcoinNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreateARequest))
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateARequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateARequestActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
	Date currentDate = new Date();
        
        InvestorWorkRequest iwReq = new InvestorWorkRequest();
        int requestQuantity = Integer.parseInt(perchaseBitcoinNumberJTextField.getText());
        if(requestQuantity*1200 >= customer.getBitcoinSystemBalance()){
            JOptionPane.showMessageDialog(null, "Balance Not Enough!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        iwReq.setQuantity(requestQuantity);
        iwReq.setSender(customer);
        iwReq.setRequestDate(currentDate);
        iwReq.setMessage("Bitcoin Request.");
        iwReq.setStatus("Processing");
        business.getSupplierWorkQueue().getWorkRequestList().add(iwReq);
        
        
    }//GEN-LAST:event_jButtonCreateARequestActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jTableCustomerRequestToSupplier.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Date requestDate = (Date) jTableCustomerRequestToSupplier.getValueAt(row, 4);
        for(InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
            if(request.getSender().getName().equals(customer.getName())&&request.getStatus().equals("Confirmed!")&&request.getRequestDate().equals(requestDate)){
                request.setStatus("Bitcoin Recieved.");
            }else if(request.getSender().getName().equals(customer.getName())&&(!request.getStatus().equals("Confirmed!"))){
                JOptionPane.showMessageDialog(null, "You can only confirm the request which status is Confirmed!!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        BitcoinInvestorWorkArea manageOrganizationJPanel = new BitcoinInvestorWorkArea(userProcessContainer, business, customer);
        userProcessContainer.add("BitcoinInvestorWorkArea", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField balanceJTextField;
    private javax.swing.JTextField bitcoinNumberJTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonCreateARequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCustomerRequestToSupplier;
    private javax.swing.JTextField perchaseBitcoinNumberJTextField;
    private javax.swing.JTextField supplierBitcoinJTextField;
    // End of variables declaration//GEN-END:variables

    

   
}
