/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Bitcoin;

import Bank.Customer;
import Bitcoin.Bitcoin;
import Bitcoin.Exchanger;
import Bitcoin.MatchPair;
import Business.Business;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author owner
 */
public class BuildTransactionjPanel extends javax.swing.JPanel {

    /**
     * Creates new form BuildTransactionjPanel
     */
    private JPanel userProcessContainer;
    private Business business;
    private Exchanger exchanger;
    public BuildTransactionjPanel(JPanel userProcessContainer, Business business, Exchanger exchanger) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.exchanger = exchanger;
        populateMatchPairTable();
    }
    
    private void populateMatchPairTable() {
        DefaultTableModel model = (DefaultTableModel) jTableMatchPair.getModel();
        model.setRowCount(0);
        for(MatchPair mp : business.getMatchPairDirectory().getMatchPairDirectory()){
            Object[] row = new Object[6];
            row[0] = mp.getSeller();
            row[1] = mp.getQuantity();
            row[2] = mp.getStatus();
            row[3] = mp.getBuyer();
            row[4] = mp.getBuyerQuantity();
            row[5] = mp.getBuyerStatus();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel17 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMatchPair = new javax.swing.JTable();
        jButtonBuildTransaction = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 153));

        jLabel17.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel17.setText("Match Transaction");

        jLabel26.setText("-------Check Investor Confirmation-----------------------------------------------------------------------------------------------------------------------------------------");

        jTableMatchPair.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seller Name", "Sell Quantity", "Seller Status", "Buyer Name", "Buy Quantity", "Buyer Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMatchPair);
        if (jTableMatchPair.getColumnModel().getColumnCount() > 0) {
            jTableMatchPair.getColumnModel().getColumn(0).setResizable(false);
            jTableMatchPair.getColumnModel().getColumn(1).setResizable(false);
            jTableMatchPair.getColumnModel().getColumn(2).setResizable(false);
            jTableMatchPair.getColumnModel().getColumn(3).setResizable(false);
            jTableMatchPair.getColumnModel().getColumn(5).setResizable(false);
        }

        jButtonBuildTransaction.setBackground(new java.awt.Color(255, 0, 0));
        jButtonBuildTransaction.setForeground(new java.awt.Color(255, 0, 0));
        jButtonBuildTransaction.setText("Build Transaction");
        jButtonBuildTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuildTransactionActionPerformed(evt);
            }
        });

        jButtonBack.setBackground(new java.awt.Color(255, 0, 0));
        jButtonBack.setForeground(new java.awt.Color(255, 0, 0));
        jButtonBack.setText("<< Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBack)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonBuildTransaction)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBuildTransaction)
                .addGap(18, 18, 18)
                .addComponent(jButtonBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        BitcoinExchangerWorkArea bewa = new BitcoinExchangerWorkArea(userProcessContainer, business, exchanger);
        userProcessContainer.add("BitcoinExchangerWorkArea", bewa);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonBuildTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuildTransactionActionPerformed
        // TODO add your handling code here:
        int row = jTableMatchPair.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String sellerStatus = (String) jTableMatchPair.getValueAt(row, 2);
        String buyerStatus = (String) jTableMatchPair.getValueAt(row, 5);
        String seller = (String) jTableMatchPair.getValueAt(row, 0);
        String buyer = (String) jTableMatchPair.getValueAt(row, 3);
        Date date = new Date();
        int quantity = (int) jTableMatchPair.getValueAt(row, 4);
        if(sellerStatus.equals("Confirmed.") && buyerStatus.equals("Confirmed.")){
            business.getTransactionDirectory().createTransaction(seller, buyer, date, quantity, "UnTax", "UnFee");
            for(Customer cusSell : business.getCustomerDirectory().getCustomerDirectory()){
                for(Customer cusBuy : business.getCustomerDirectory().getCustomerDirectory()){
                    if(cusSell.getName().equals(seller) && cusBuy.getName().equals(buyer)){
                        cusSell.setBitcoinSystemBalance(cusSell.getBitcoinSystemBalance() + quantity*1200*0.93);
                        cusBuy.setBitcoinSystemBalance(cusBuy.getBitcoinSystemBalance() - quantity*1200);
                        for(int i = 0; i<quantity; i++){
                            int rando = (int) ((Math.random() * (cusSell.getWallet().getBitcoinCatalog().size()-1)));
                            Bitcoin fromSell = cusSell.getWallet().getBitcoinCatalog().get(rando);
                            fromSell.createOwnership(cusSell.getName(), cusBuy.getName(), cusSell.getId(), cusBuy.getId(), date);
                            cusBuy.getWallet().getBitcoinCatalog().add(fromSell);
                            cusSell.getWallet().getBitcoinCatalog().remove(rando);
                        }
                    }
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seller or Buyer has not confirm request!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
    }//GEN-LAST:event_jButtonBuildTransactionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBuildTransaction;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMatchPair;
    // End of variables declaration//GEN-END:variables

    
}
