/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Bank.AccountingPeople;

import Bank.BankAccount;
import Bank.BankAccountingPeople;
import Bank.Customer;
import Business.Business;
import WorkRequest.BankAccountingPeopleWorkQueue;
import WorkRequest.BankWorkRequest;

import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class BankAccountingPeopleWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
  
    private Business business;
    
    private BankAccountingPeople bap;
    private BankWorkRequest bwq;
   
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public BankAccountingPeopleWorkArea(JPanel userProcessContainer, Business business, BankAccountingPeople bap) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.bap = bap;
        bwq = new BankWorkRequest();
        nameTf.setText(bap.getName());
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();
        model.setRowCount(0);
        for (BankWorkRequest request : business.getBankAccountingPeopleWorkQueue().getWorkRequestList()){
            Object[] row = new Object[9];
            row[0] = request.getId();
            row[1] = request.getSender();
            row[2] = request.getBankAccount().getBankName();
            row[3] = request.getBankAccount().getAccountNumber();
            row[4] = request.getTotal();
            row[5] = request.getMessage();
            row[6] = request.getStatus();
            row[7] = request.getRequestDate();
            row[8] = request.getResolveDate();
//            String result = ((AccoutingTestWorkRequest) request).getTestResult();
//            row[3] = result == null ? "Waiting" : result;
            model.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        requestTestJButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nameTf = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setText("Assign To Me");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, -1, -1));

        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Bank Accounting People Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 430, -1));

        jLabel2.setText("-Reply Investor Request--------------------------------------------------------------------------------------------------------------------------------------------------");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        jLabel3.setText("-Investor Transaction Request-------------------------------------------------------------------------------------------------------------------------------------------");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        workRequestJTable1.setBackground(new java.awt.Color(255, 204, 204));
        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Sender", "BankName", "AccountNumber", "Total", "Message", "Status", "RequstDate", "ResolveDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable1);
        if (workRequestJTable1.getColumnModel().getColumnCount() > 0) {
            workRequestJTable1.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(4).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(5).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(6).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(7).setResizable(false);
            workRequestJTable1.getColumnModel().getColumn(8).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 690, 140));

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, -1));

        requestTestJButton1.setText("Send back");
        requestTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButton1ActionPerformed(evt);
            }
        });
        add(requestTestJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, -1, -1));

        jLabel4.setText("Insert Your Massage:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, -1, -1));
        add(messageJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 400, 420, -1));

        jLabel5.setText("To:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 130, -1));

        jLabel6.setText("Accounting People Name:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 140, 30));
        add(nameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 50, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        
        int selectedRow = workRequestJTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        int id = (int) workRequestJTable1.getValueAt(selectedRow, 0);
        Customer customer = (Customer) workRequestJTable1.getValueAt(selectedRow, 1);
        int accountNumber = (int) workRequestJTable1.getValueAt(selectedRow, 3);
        double price = (double) workRequestJTable1.getValueAt(selectedRow, 4);
        for (BankWorkRequest r : business.getBankAccountingPeopleWorkQueue().getWorkRequestList()) {
            if (r.getId() == id) {
                bwq = r;
                break;
            }
        }
        BankAccount bankAccount = new BankAccount();
        for (BankAccount ba : customer.getBankAccountList()) {
            if (ba.getAccountNumber() == accountNumber) {
                bankAccount = ba;
                break;
            }
        }
        jTextField1.setText(customer.getName());
        if (bankAccount.getBalance() < price) {
            messageJTextField.setText("The Account balance is not enough. Please select another Bank Account!");
            return;
        } else {
            messageJTextField.setText("Transferred!");
        }
        
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void requestTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButton1ActionPerformed

        String message = messageJTextField.getText();
        bwq.setMessage(message);
        bwq.setProcessor(bap.getName());
        bwq.setStatus("Sent");
        bwq.setResolveDate(new Date());
        int selectedRow = workRequestJTable1.getSelectedRow();
        Customer customer = (Customer) workRequestJTable1.getValueAt(selectedRow, 1);
        for (BankWorkRequest r : customer.getWorkRequestList()) {
            if (r.getId() == bwq.getId()) {
                r = bwq;
                break;
            }
        }
//        rr.setMessage(message);
//        rr.setProcessor(bap.getName());
//        rr.setStatus("Sent");
//        rr.setResolveDate(new Date());
//        if(message.equals("") || message.isEmpty()){
//            JOptionPane.showMessageDialog(null, "Please enter something to send.");
//            return;
//        }
//        BankWorkRequest request = new BankWorkRequest();
//        request.setMessage(message);
//        request.setProcessor(bap.getName());
//        request.setStatus("Sent");
//
//        BankOrganization org = null;
//        for (BankOrganization organization : business.getOrganizationDirectory().getOrganizationList()){
//            if (organization instanceof BankAccountingPeopleOrganization){
//                org = organization;
//                break;
//            }
//        }
//        if (org!=null){
//            org.getWorkQueue().getWorkRequestList().add(request);
//            userAccount.getWorkQueue().getWorkRequestList().add(request);
//        }

        JOptionPane.showMessageDialog(null, "Request message sent");

    }//GEN-LAST:event_requestTestJButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTextField nameTf;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JButton requestTestJButton1;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
}
