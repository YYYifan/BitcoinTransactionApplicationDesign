/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier;

import Bank.Customer;
import Bitcoin.Bitcoin;
import Business.Business;
import Government.TaxTransaction;
import Supplier.SaleRecord;
import WorkRequest.InvestorWorkRequest;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liugo
 */
public class SupplierInvestorRequestManagment extends javax.swing.JPanel {

    /**
     * Creates new form SupplierInvestorRequestManagment
     */
    private JPanel userProcessContainer;
    private Business business;
//    private SaleRecord saleRecord;
//    public SupplierInvestorRequestManagment() {
//        initComponents();
//    }

    SupplierInvestorRequestManagment(JPanel userProcessContainer, Business business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        int totalNumber = business.getSupplierAdmin().getBitcoinList().size();
        remainingBitcoinNumberJTextField2.setText(String.valueOf(totalNumber));
        populateInvestorToSupplierTable();
    }
    
    private void populateInvestorToSupplierTable() {
        DefaultTableModel model = (DefaultTableModel)investerRequestToSupplierjTable2.getModel();
        model.setRowCount(0);
        for (InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request.getSender().getName();
            row[1] = request.getQuantity();
            row[2] = request.getQuantity()*1200;
            row[3] = request.getStatus();
            row[4] = request.getRequestDate();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        investerRequestToSupplierjTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        requestTestJButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        remainingBitcoinNumberJTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        investorBalancejTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        investorNamejTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        requiredTotalPricejTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        investorReqDatejTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        investorQuantityjTextField1 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 204, 153));

        investerRequestToSupplierjTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Investor", "Require Quatity", "Total Price", "Status", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(investerRequestToSupplierjTable2);

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setText("Select Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("-Investor Bitcoin purchasing request--------------------------------------------------------------------------------------------------------------------------");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Investor Request Management");

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setText("<< Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        requestTestJButton2.setText("Send back");
        requestTestJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Insert Your Massage:");

        jLabel3.setText("-Please Insert your Massage Below--------------------------------------------------------------------------------------------------------------------------");

        jLabel6.setText("-Remaining Bitcoin number:");

        jLabel8.setText("Balance:");

        investorBalancejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investorBalancejTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Investor Name:");

        investorNamejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investorNamejTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("Total Price:");

        requiredTotalPricejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requiredTotalPricejTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setText("Request Date:");

        investorReqDatejTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investorReqDatejTextField1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Required Quantity:");

        investorQuantityjTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investorQuantityjTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(remainingBitcoinNumberJTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(8, 8, 8)
                                .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(requestTestJButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(investorNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(investorReqDatejTextField1)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(requiredTotalPricejTextField))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(investorBalancejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(investorQuantityjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(remainingBitcoinNumberJTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(investorQuantityjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(investorNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(investorBalancejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(investorReqDatejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(requiredTotalPricejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(requestTestJButton2))
                .addGap(49, 49, 49)
                .addComponent(jButton3)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int iWRequest = investerRequestToSupplierjTable2.getSelectedRow();
        if (iWRequest < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        Date reqDate = (Date) investerRequestToSupplierjTable2.getValueAt(iWRequest, 4);
        String senderName = (String) investerRequestToSupplierjTable2.getValueAt(iWRequest, 0);
        int totalPrice = (int) investerRequestToSupplierjTable2.getValueAt(iWRequest, 2);
        int quantity = (int) investerRequestToSupplierjTable2.getValueAt(iWRequest, 1);
        String status = (String) investerRequestToSupplierjTable2.getValueAt(iWRequest, 3);
        for(Customer customer : business.getCustomerDirectory().getCustomerDirectory()){
            if (customer.getName().equals(senderName)){
                double customerBalance =  customer.getBitcoinSystemBalance();
                investorBalancejTextField.setText(String.valueOf(customerBalance));
            }
        }
        investorNamejTextField.setText(senderName);
        requiredTotalPricejTextField.setText(String.valueOf(totalPrice));
        investorReqDatejTextField1.setText(String.valueOf(reqDate));
        investorQuantityjTextField1.setText(String.valueOf(quantity));
        
        if(Integer.parseInt(investorBalancejTextField.getText())>=totalPrice){
            messageJTextField.setText("Request Confirmed!");
            for(InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
                if (request.getSender().getName().equals(senderName)&& request.getRequestDate().equals(reqDate)){
                    request.setStatus("Confirmed!");
                }
            }
        }else{
            messageJTextField.setText("Request Denied! Balance Not Enough");
            for(InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
                if (request.getSender().getName().equals(senderName)&& request.getRequestDate().equals(reqDate)){
                    request.setStatus("Denied!");
                }
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void requestTestJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButton2ActionPerformed
//        SaleRecord saleRecord = new SaleRecord();
        SaleRecord saleRecord = new SaleRecord();
        if(messageJTextField.getText().equals("Request Confirmed!")){
//            for(TaxTransaction taxTransaction : business.getTaxTransactionDirectory().getTaxTransactionDirectory()){
                TaxTransaction taxTransaction = new TaxTransaction();
                taxTransaction.getTransaction().setSeller("Bitcoin Supplier");
                for(InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
                    if (request.getSender().getName().equals(investorNamejTextField.getText())&& request.getRequestDate().equals(investorReqDatejTextField1.getText())){
                        request.setStatus("Confirmed!");
                        request.setMessage("Request Confirmed!");
                    }
                }
                String reqDate = investorReqDatejTextField1.getText();
                Date date1 = null;
                try {
                    date1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(reqDate);
                } catch (ParseException ex) {

                }
                for(Customer customer : business.getCustomerDirectory().getCustomerDirectory()){
                    if (customer.getName().equals(investorNamejTextField.getText())){
                        taxTransaction.getTransaction().setBuyer(investorNamejTextField.getText());
                        for(int i = 0; i<Integer.parseInt(investorQuantityjTextField1.getText())-1; i++){
                            int rando = (int) ((Math.random() * (business.getSupplierAdmin().getBitcoinList().size()-1)));
                            Bitcoin bitcoin = business.getSupplierAdmin().getBitcoinList().get(rando);
                            bitcoin.createOwnership("Supplier", customer.getName(), 0, customer.getId(), date1);
                            customer.getWallet().getBitcoinCatalog().add(bitcoin);
                            taxTransaction.getTransaction().getBitcoins().add(bitcoin.getId());
                            saleRecord.getSoldBitcoins().getBitcoinCatalog().add(bitcoin);
                            business.getSupplierAdmin().getBitcoinList().remove(rando); 
                        }
                    }
                }
                
                saleRecord.setDate(date1);
                taxTransaction.getTransaction().setDate(date1);
                for(Customer cus : business.getCustomerDirectory().getCustomerDirectory()){
                    if(cus.getName().equals(investorNamejTextField.getText())){
                        saleRecord.setInvestor(cus);
                    }
                }
                saleRecord.setQuantity(Integer.parseInt(investorQuantityjTextField1.getText()));
                taxTransaction.getTransaction().setQuantity(Integer.parseInt(investorQuantityjTextField1.getText()));
                saleRecord.setTotal(Double.parseDouble(requiredTotalPricejTextField.getText()));
                business.getSupplierAccount().getSaleRecordList().add(saleRecord);
//            }
        }else if(messageJTextField.getText().equals("Request Denied! Balance Not Enough")){
            for(InvestorWorkRequest request : business.getSupplierWorkQueue().getWorkRequestList()){
                if (request.getSender().getName().equals(investorNamejTextField.getText())&& request.getRequestDate().equals(investorReqDatejTextField1.getText())){
                    request.setStatus("Denied!");
                    request.setMessage("Request Denied! Balance Not Enough");
                }
            }
        }
      
        

    }//GEN-LAST:event_requestTestJButton2ActionPerformed

    private void investorBalancejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investorBalancejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_investorBalancejTextFieldActionPerformed

    private void investorNamejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investorNamejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_investorNamejTextFieldActionPerformed

    private void requiredTotalPricejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requiredTotalPricejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requiredTotalPricejTextFieldActionPerformed

    private void investorReqDatejTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investorReqDatejTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_investorReqDatejTextField1ActionPerformed

    private void investorQuantityjTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investorQuantityjTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_investorQuantityjTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable investerRequestToSupplierjTable2;
    private javax.swing.JTextField investorBalancejTextField;
    private javax.swing.JTextField investorNamejTextField;
    private javax.swing.JTextField investorQuantityjTextField1;
    private javax.swing.JTextField investorReqDatejTextField1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTextField remainingBitcoinNumberJTextField2;
    private javax.swing.JButton requestTestJButton2;
    private javax.swing.JTextField requiredTotalPricejTextField;
    // End of variables declaration//GEN-END:variables

    
}
